Jawaban Implementation Test - Backend (2)

1. SELECT * FROM employees;
2. SELECT COUNT(*) FROM employees WHERE job_title = 'Manager';
3. SELECT name, salary FROM employees WHERE department IN ('Sales', 'Marketing');
4. SELECT AVG(salary) AS average_salary FROM employees WHERE joined_date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR);
5. SELECT e.name AS employee_name, SUM(sd.sales) AS total_sales FROM employees e JOIN sales_data sd ON e.employee_id = sd.employee_id GROUP BY e.employee_id, e.name ORDER BY total_sales DESC LIMIT 5;
6. SELECT e.name, e.salary, d.average_salary AS department_avg_salary FROM employees e JOIN ( SELECT department, AVG(salary) AS average_salary FROM employees GROUP BY department ) d ON e.department = d.department WHERE d.average_salary > ( SELECT AVG(salary) FROM employees );
7. SELECT name, total_sales, RANK() OVER (ORDER BY total_sales DESC) AS sales_rank FROM ( SELECT e.name, SUM(sd.sales) AS total_sales FROM employees e LEFT JOIN sales_data sd ON e.employee_id = sd.employee_id GROUP BY e.employee_id, e.name ) AS sales_summary;
8. CREATE PROCEDURE GetDepartmentEmployees(IN department_name VARCHAR(255)) BEGIN SELECT e.name, e.salary FROM employees e WHERE e.department = department_name; END;